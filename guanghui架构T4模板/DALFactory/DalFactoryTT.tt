<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@
 output extension=".cs"#>
 
<#

CodeGenerationTools code = new CodeGenerationTools(this);
MetadataLoader loader = new MetadataLoader(this);
CodeRegion region = new CodeRegion(this, 1);
MetadataTools ef = new MetadataTools(this);
//修改当前tt模板相对应的edmx模型的位置
string inputFile = @"..\\Guanghui.OA.Model\\DataModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using Guanghui.OA.IDAL;

namespace Guanghui.OA.DALFactory
{
    /// <summary>
    /// 简单工厂或者抽象工厂。
    /// </summary>
    public partial class DalFactory
    {  
<#
foreach (EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e => e.Name))
{    
#>		
		public static I<#=entity.Name#>Dal Get<#=entity.Name#>Dal()
        {
            
            //object obj = Assembly.Load(AssemblyName).CreateInstance(AssemblyName + ".<#=entity.Name#>Dal", true);
			//return obj as I<#=entity.Name#>Dal;

			string fullClassName = NameSpace + ".<#=entity.Name#>Dal";
            return CreateInstance(fullClassName) as I<#=entity.Name#>Dal;
        }
<#}#>
	}

}